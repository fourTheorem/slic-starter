service: cicd-deployment-target

custom:
  cicdAccountId: ${env:CICD_ACCOUNT_ID}

provider:
  name: aws
  stage: 'cicd'
  region: ${self:opt.region}

resources:
  Resources:
    deploymentRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: slic-cicd-deployment-role
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: ${self:custom.cicdAccountId}
              Action: [sts:AssumeRole]
        Path: /

    deploymentPolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: slic-cicd-deployment-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - cloudformation:List*
                - cloudformation:Get*
                - cloudformation:PreviewStackUpdate
                - cloudformation:ValidateTemplate
                - cloudformation:CreateStack
                - cloudformation:CreateUploadBucket
                - cloudformation:DeleteStack
                - cloudformation:Describe*
                - cloudformation:UpdateStack
                - cloudformation:CreateChangeSet
                - cloudformation:ExecuteChangeSet
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - apigateway:*
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
                - iam:DeleteServiceLinkedRole
                - iam:AttachRolePolicy
                - iam:DetachRolePolicy
                - iam:GetRole
                - iam:CreateRole
                - iam:PassRole
                - iam:GetRolePolicy
                - iam:PutRolePolicy
                - iam:DeleteRolePolicy
                - iam:DeleteRole
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - s3:CreateBucket
                - s3:DeleteBucket
                - s3:DeleteBucketPolicy
                - s3:GetBucket*
                - s3:GetBucketPolicy
                - s3:GetObject
                - s3:GetObjectVersion
                - s3:GetEncryptionConfiguration
                - s3:PutEncryptionConfiguration
                - s3:SetBucketEncryption
                - s3:ListBucket
                - s3:PutObject
                - s3:PutBucketPolicy
                - s3:PutBucketWebsite
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - lambda:Get*
                - lambda:List*
                - lambda:CreateEventSourceMapping
                - lambda:DeleteEventSourceMapping
                - lambda:CreateFunction
                - lambda:AddPermission
                - lambda:CreateAlias
                - lambda:DeleteFunction
                - lambda:InvokeFunction
                - lambda:PublishVersion
                - lambda:RemovePermission
                - lambda:Update*
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - cloudfront:CreateDistribution
                - cloudfront:DeleteDistribution
                - cloudfront:GetDistribution
                - cloudfront:UpdateDistribution
                - cloudfront:ListTagsForResource
                - cloudfront:TagResource
                - cloudfront:CreateCloudFrontOriginAccessIdentity
                - cloudfront:UpdateCloudFrontOriginAccessIdentity
                - cloudfront:DeleteCloudFrontOriginAccessIdentity
                - cloudfront:GetCloudFrontOriginAccessIdentity
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - dynamodb:CreateTable
                - dynamodb:DescribeTable
                - dynamodb:Query
                - dynamodb:Scan
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
                - dynamodb:UpdateTable
              Resource: 'arn:aws:dynamodb:${self:provider.region}:*:*'
            - Effect: Allow
              Action: 'sqs:*'
              Resource:
                - arn:aws:sqs:*:*:*
            - Effect: Allow
              Action:
                - cloudwatch:GetMetricStatistics
                - cloudwatch:DescribeAlarms
                - cloudwatch:DeleteAlarms
                - cloudwatch:PutMetricAlarm
                - cloudwatch:DeleteDashboards
                - cloudwatch:ListDashboards
                - cloudwatch:GetDashboard
                - cloudwatch:PutDashboard
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:DeleteLogGroup
                - logs:DeleteSubscriptionFilter
                - logs:DescribeSubscriptionFilters
                - logs:PutLogEvents
                - logs:PutSubscriptionFilter
                - logs:DescribeLogStreams
                - logs:DescribeLogGroups
                - logs:FilterLogEvents
                - logs:PutRetentionPolicy
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - events:Put*
                - events:Remove*
                - events:Delete*
                - events:Describe*
              Resource:
                - 'arn:aws:events:*:*:rule/*'
            - Effect: Allow
              Action:
                - 'acm:RequestCertificate'
                - 'acm:DeleteCertificate'
                - 'acm:DescribeCertificate'
                - 'acm:AddTagsToCertificate'
                - 'route53:GetChange'
                - 'route53:GetHostedZone'
                - 'route53:CreateHostedZone'
                - 'route53:DeleteHostedZone'
                - 'route53:ChangeResourceRecordSets'
                - 'route53:ChangeTagsForResource'
                - 'route53:ListResourceRecordSets'
                - 'route53:ListHostedZones'
                - 'route53:ListQueryLoggingConfigs'
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - events:Put*
                - events:Remove*
                - events:Delete*
              Resource:
                - 'arn:aws:events:*:*:rule/*'
            - Effect: Allow
              Action:
                # Start permissions required for integration tests
                - cognito-idp:AdminCreateUser
                - cognito-idp:AdminDeleteUser
                - cognito-idp:AdminInitiateAuth
                - cognito-idp:AdminRespondToAuthChallenge
                # End permissions required for integration tests
                - cognito-idp:CreateUserPool*
                - cognito-idp:DeleteUserPool*
                - cognito-idp:ListUserPool*
                - cognito-identity:CreateIdentityPool
                - cognito-identity:DeleteIdentityPool
                - cognito-identity:UpdateIdentityPool
                - cognito-identity:ListIdentityPools
                - cognito-identity:GetIdentityPoolRoles
                - cognito-identity:SetIdentityPoolRoles
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - 'ssm:ListTagsForResource'
                - 'ssm:AddTagsToResource'
                - 'ssm:RemoveTagsFromResource'
                - 'ssm:DeleteParameter'
                - 'ssm:DescribeParameters'
                - 'ssm:PutParameter'
                - 'ssm:GetParameter'
                - 'ssm:GetParameters'
              Resource:
                - '*'

        Roles:
          - Ref: deploymentRole
